package presentation.inventario;

import entidad.constantes.Constants;
import entidad.entitys.inventario.Category;
import entidad.entitys.inventario.Product;
import entidad.entitys.inventario.Store;
import entidad.entitys.inventario.Supplier;
import lombok.extern.log4j.Log4j2;
import negocio.inventario.LogicalCategory;
import negocio.inventario.LogicalProduct;
import negocio.inventario.LogicalStorage;
import negocio.inventario.LogicalSupplier;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.text.ParseException;
import java.util.List;
import java.util.Objects;

/**
 *
 * @author ivanl
 */
@Log4j2
public class ProductForm extends javax.swing.JPanel {
    private final LogicalCategory logicalCategory = new LogicalCategory();
    private final LogicalProduct logicalProduct = new LogicalProduct();
    private final LogicalStorage logicalStorage = new LogicalStorage();
    private final LogicalSupplier logicalSupplier = new LogicalSupplier();

    private int idNumberProduct = 0;
    private boolean isSelectProduct = false;

    /**
     * Creates new form ProductForm
     */
    public ProductForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbBoxCategoria = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmbBoxProveedor = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cmbBoxAlmacen = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        spinnerCantidad = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduct = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        textImagen = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        textCodeProduct = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        textPrecio = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GESTION DE PRODUCTOS");

        textNombre.setBackground(new java.awt.Color(204, 204, 204));
        textNombre.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        textNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNombreKeyReleased(evt);
            }
        });

        jLabel2.setText("Nombre");

        textDescripcion.setBackground(new java.awt.Color(204, 204, 204));
        textDescripcion.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel3.setText("Descripcion");

        cmbBoxCategoria.setBackground(new java.awt.Color(204, 204, 204));
        cmbBoxCategoria.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel4.setText("Categoria");

        cmbBoxProveedor.setBackground(new java.awt.Color(204, 204, 204));
        cmbBoxProveedor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel5.setText("Proveedor");

        cmbBoxAlmacen.setBackground(new java.awt.Color(204, 204, 204));
        cmbBoxAlmacen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel6.setText("Almacen");

        spinnerCantidad.setModel(new javax.swing.SpinnerNumberModel(1, 0, 999999, 1));
        spinnerCantidad.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        spinnerCantidad.setEditor(new javax.swing.JSpinner.NumberEditor(spinnerCantidad, ""));
        spinnerCantidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerCantidadStateChanged(evt);
            }
        });

        jLabel7.setText("Cantidad");

        tableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nombre", "Cantidad", "Descripcion", "rutaimagen", "categoria", "proveedor", "almacen", "code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProduct);
        if (tableProduct.getColumnModel().getColumnCount() > 0) {
            tableProduct.getColumnModel().getColumn(0).setMinWidth(0);
            tableProduct.getColumnModel().getColumn(0).setMaxWidth(0);
            tableProduct.getColumnModel().getColumn(1).setResizable(false);
            tableProduct.getColumnModel().getColumn(2).setResizable(false);
            tableProduct.getColumnModel().getColumn(3).setMinWidth(0);
            tableProduct.getColumnModel().getColumn(3).setMaxWidth(0);
            tableProduct.getColumnModel().getColumn(4).setMinWidth(0);
            tableProduct.getColumnModel().getColumn(4).setMaxWidth(0);
            tableProduct.getColumnModel().getColumn(5).setResizable(false);
            tableProduct.getColumnModel().getColumn(6).setMinWidth(0);
            tableProduct.getColumnModel().getColumn(6).setMaxWidth(0);
            tableProduct.getColumnModel().getColumn(7).setMinWidth(0);
            tableProduct.getColumnModel().getColumn(7).setMaxWidth(0);
            tableProduct.getColumnModel().getColumn(8).setMinWidth(0);
            tableProduct.getColumnModel().getColumn(8).setMaxWidth(0);
        }

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("TABLA DE PRODUCTOS");

        btnCancelar.setBackground(new java.awt.Color(255, 204, 204));
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cancelar.png"))); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCancelar.setBorderPainted(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAgregar.setBackground(new java.awt.Color(204, 204, 204));
        btnAgregar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/agregar-producto.png"))); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnAgregar.setBorderPainted(false);
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnAgregarActionPerformed(evt);
                } catch (ParseException e) {
                    log.error("Error: {}", e.getMessage());
                    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                }
            }
        });

        btnActualizar.setBackground(new java.awt.Color(255, 255, 204));
        btnActualizar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/producto.png"))); // NOI18N
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnActualizar.setBorderPainted(false);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnActualizarActionPerformed(evt);
                } catch (ParseException e) {
                    log.error("Error: {}", e.getMessage());
                    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                }
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 102, 102));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/eliminar-producto.png"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnEliminar.setBorderPainted(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnEliminarActionPerformed(evt);
                } catch (ParseException e) {
                    log.error("Error: {}", e.getMessage());
                    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                }
            }
        });

        jLabel10.setText("Imagen");

        textImagen.setBackground(new java.awt.Color(204, 204, 204));
        textImagen.setText("Ruta imagen");
        textImagen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        textImagen.setEnabled(false);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/signo-de-interrogacion.png"))); // NOI18N
        jLabel11.setToolTipText("Ingresar letras o caracteres especiales, puede causar errores.");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel12.setText("Codigo");

        textCodeProduct.setBackground(new java.awt.Color(204, 204, 204));
        textCodeProduct.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel9.setText("Precio por defecto");

        textPrecio.setBackground(new java.awt.Color(204, 204, 204));
        textPrecio.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        textPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textPrecioKeyTyped(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/signo-de-interrogacion.png"))); // NOI18N
        jLabel13.setToolTipText("No es requerido, pero es una forma rapida de agregar un precio predeterminado.");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10)
                                        .addGap(149, 149, 149)
                                        .addComponent(jLabel6)
                                        .addGap(410, 410, 410))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(11, 11, 11))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(cmbBoxAlmacen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmbBoxProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textDescripcion))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(spinnerCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel11)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(textCodeProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel7)
                                                        .addGap(73, 73, 73)
                                                        .addComponent(jLabel12)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(cmbBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(275, 275, 275)
                                                .addComponent(jLabel3)))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textCodeProduct)
                            .addComponent(spinnerCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(cmbBoxCategoria)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbBoxAlmacen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textDescripcion)
                    .addComponent(cmbBoxProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        getAllCategory();
        getAllStorage();
        getAllSupplier();
        getAllDataProduct();
        btnAgregar.setEnabled(true);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnCancelar.setVisible(false);
    }//GEN-LAST:event_formAncestorAdded

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) throws ParseException {//GEN-FIRST:event_btnAgregarActionPerformed
        String result = logicalProduct.addProduct(getDataForm());
        log.info("Resultado Producto Save: {}", result );
        JOptionPane.showMessageDialog(null, result);

        if (!result.contains(Constants.ERROR)) {
            cleanFieldTextForm();
            enableButtonForm();
            getAllDataProduct();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) throws ParseException {//GEN-FIRST:event_btnActualizarActionPerformed
        String result = logicalProduct.updateProduct(getDataForm());
        log.info("Resultado Producto update: {}", result );
        JOptionPane.showMessageDialog(null, result);

        if (!result.contains(Constants.ERROR)) {
            cleanFieldTextForm();
            enableButtonForm();
            getAllDataProduct();
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) throws ParseException {//GEN-FIRST:event_btnEliminarActionPerformed
        String result = logicalProduct.deleteProduct(idNumberProduct);
        log.info("Resultado Producto update: {}", result );
        JOptionPane.showMessageDialog(null, result);

        if (!result.contains(Constants.ERROR)) {
            cleanFieldTextForm();
            enableButtonForm();
            getAllDataProduct();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        enableButtonForm();
        cleanFieldTextForm();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tableProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductMouseClicked
        DefaultTableModel defaultTableModel = (DefaultTableModel)tableProduct.getModel();
        int indexSelect = tableProduct.getSelectedRow();

        idNumberProduct = Integer.parseInt(defaultTableModel.getValueAt(indexSelect, 0).toString());

        textNombre.setText(defaultTableModel.getValueAt(indexSelect, 1).toString());
        spinnerCantidad.setValue(Integer.parseInt(defaultTableModel.getValueAt(indexSelect, 2).toString()));
        textDescripcion.setText(defaultTableModel.getValueAt(indexSelect, 3).toString());
        textImagen.setText(defaultTableModel.getValueAt(indexSelect, 4).toString());
        textCodeProduct.setText(defaultTableModel.getValueAt(indexSelect, 8).toString());

        cmbBoxCategoria.setSelectedItem(new
                Category(Integer.parseInt(defaultTableModel.getValueAt(indexSelect, 5).toString())));
        cmbBoxAlmacen.setSelectedItem(new
                Store(Integer.parseInt(defaultTableModel.getValueAt(indexSelect, 7).toString())));
        cmbBoxProveedor.setSelectedItem(new
                Supplier(Integer.parseInt(defaultTableModel.getValueAt(indexSelect, 6).toString())));

        if (!isSelectProduct) enableButtonForm();
    }//GEN-LAST:event_tableProductMouseClicked

    private void textNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNombreKeyReleased
        String result = splitAndConcatenate(textNombre.getText());
        textCodeProduct.setText(result);
    }//GEN-LAST:event_textNombreKeyReleased

    private void textPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPrecioKeyTyped
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_textPrecioKeyTyped

    private void spinnerCantidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerCantidadStateChanged
       log.info("Evento");
    }//GEN-LAST:event_spinnerCantidadStateChanged


    private void getAllCategory() {
        SwingUtilities.invokeLater(() -> {
            try {
                List<Category> categoryList = logicalCategory.categoryList();
                log.info("Consultando los datos de categoria para comboBox: {}", categoryList.toString());

                    for (Category category : categoryList) {
                    cmbBoxCategoria.addItem(new Category(
                        category.getIdCategory(),
                        category.getName(),
                        category.getDescription(),
                        category.getDateCreate(),
                        category.getDateUpdate()
                        ));
                }
            } catch (ParseException e) {
                log.error("Ups!! Ocurrio un error al cargar los datos: " + e.getMessage());
                JOptionPane.showMessageDialog(null,
                        "Combo categoria error, causa: " + e.getMessage());
            }
        });
    }

    private void getAllSupplier() {
        SwingUtilities.invokeLater(() -> {
            try {
                List<Supplier> supplierList = logicalSupplier.findAllSupplier();

                if (supplierList.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Registremos Proveedores.");
                } else {
                    for (Supplier supplierResult : supplierList) {
                        cmbBoxProveedor.addItem(new Supplier(
                            supplierResult.getIdSupplier(),
                            supplierResult.getName(),
                            supplierResult.getName_social(),
                            supplierResult.getDireccion(),
                            supplierResult.getPhoneNumber1(),
                            supplierResult.getPhoneNumber2(),
                            supplierResult.getDescription()
                        ));
                    }
                }
            } catch (ParseException e) {
                log.error("Ups!! Ocurrio un error al cargar los datos: " + e.getMessage());
                JOptionPane.showMessageDialog(null,
                        "Combo proveedor error, causa: " + e.getMessage());
            }
        });
    }

    private void getAllStorage() {
        try {
            List<Store> storeList = logicalStorage.findAllStorage();

            for (Store store : storeList) {
                cmbBoxAlmacen.addItem(new Store(
                    store.getIdStore(),
                    store.getName(),
                    store.getDescription(),
                    store.getUbication()
                ));
            }
        } catch (ParseException e) {
            log.error("Error: {}", e.getMessage());
            JOptionPane.showMessageDialog(null, "Error al cargar los datos: " + e.getMessage());
        }
    }

    public static String splitAndConcatenate(String input) {
        StringBuilder result = new StringBuilder();
        String[] words = input.split(" ");
        for (String word : words) {
            if (!word.isEmpty()) {
                char firstChar = word.charAt(0);
                String remainingChars = word.substring(1);
                result.append(firstChar);
            }
        }

        return result.toString().trim();
    }

    private Product getDataForm() {
        int idCategory = cmbBoxCategoria.getItemAt(cmbBoxCategoria.getSelectedIndex()).getIdCategory();
        int idSupplier = cmbBoxProveedor.getItemAt(cmbBoxProveedor.getSelectedIndex()).getIdSupplier();
        int idStore = cmbBoxAlmacen.getItemAt(cmbBoxAlmacen.getSelectedIndex()).getIdStore();

        return Product.builder()
            .idProduct(idNumberProduct)
            .name(textNombre.getText())
            .description(textDescripcion.getText())
            .quantity(Long.valueOf(spinnerCantidad.getValue().toString()))
            .pathImage("Sin definir.")
            .codeProduct(textCodeProduct.getText())
            .fk_supplier(idSupplier)
            .fk_category(idCategory)
            .fk_storage(idStore)
            .build();
    }

    private void getAllDataProduct() {
        SwingUtilities.invokeLater(() -> {
            try {
                List<Product> listPricesResult = logicalProduct.findAllProduct();
                DefaultTableModel defaultTableModel = (DefaultTableModel)tableProduct.getModel();
                defaultTableModel.setRowCount(0);

                for (Product product : listPricesResult) {
                    log.info(product.getName());
                    defaultTableModel.addRow(new Object[] {
                        product.getIdProduct(),
                        product.getName(),
                        product.getQuantity(),
                        product.getDescription(),
                        product.getPathImage(),
                        product.getFk_category(),
                        product.getFk_supplier(),
                        product.getFk_storage(),
                        Objects.isNull(product.getCodeProduct()) ? Constants.EMPTY : product.getCodeProduct()
                    });
                }
            } catch (ParseException e) {
                log.error("Error al consultar productos: {}", e.getMessage());
                JOptionPane.showMessageDialog(null, "Ocurrio un error, causa: " + e.getMessage());
            }
        });
    }

    private void cleanFieldTextForm() {
        textNombre.setText(Constants.EMPTY);
        spinnerCantidad.setValue(1);
        textCodeProduct.setText(Constants.EMPTY);
        textPrecio.setText(Constants.EMPTY);
        textDescripcion.setText(Constants.EMPTY);
        isSelectProduct = false;
    }

    private void enableButtonForm() {
        btnActualizar.setEnabled(!btnActualizar.isEnabled());
        btnEliminar.setEnabled(!btnEliminar.isEnabled());
        btnAgregar.setEnabled(!btnAgregar.isEnabled());
        btnCancelar.setVisible(!btnCancelar.isVisible());
        isSelectProduct = true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<Store> cmbBoxAlmacen;
    private javax.swing.JComboBox<Category> cmbBoxCategoria;
    private javax.swing.JComboBox<Supplier> cmbBoxProveedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spinnerCantidad;
    private javax.swing.JTable tableProduct;
    private javax.swing.JTextField textCodeProduct;
    private javax.swing.JTextField textDescripcion;
    private javax.swing.JTextField textImagen;
    private javax.swing.JTextField textNombre;
    private javax.swing.JTextField textPrecio;
    // End of variables declaration//GEN-END:variables
}
